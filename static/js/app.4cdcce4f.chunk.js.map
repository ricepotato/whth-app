{"version":3,"sources":["colors.js","App.js"],"names":["theme","App","useState","working","setWorking","text","setText","toDos","setTodos","saveTodos","toSave","a","async","AsyncStorage","setItem","JSON","stringify","useEffect","getItem","s","parse","e","loadToDos","mode","loadMode","View","style","styles","container","StatusBar","header","TouchableOpacity","onPress","Text","fontSize","fontWeight","color","TextInput","returnKeyType","onSubmitEditing","newTodos","Date","now","onChangeText","payload","value","placeholder","input","ScrollView","Object","keys","map","key","toDo","todoText","Platform","OS","confirm","Alert","alert","deleteTodo","Fontisto","name","size","StyleSheet","create","flex","backgroundColor","paddingHorizontal","justifyContent","flexDirection","marginTop","btnText","marginVertical","paddingVertical","borderRadius","marginBottom","alignItems"],"mappings":"iQAAaA,EACP,QADOA,EAEL,UAFKA,EAGH,U,ilBCgBK,SAASC,IACtB,MAA8BC,oBAAS,GAAvC,WAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,WAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,WAAOK,EAAP,KAAcC,EAAd,KAUMC,EAAY,SAAOC,GAAP,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACVE,IAAaC,QAjBH,SAiBwBC,KAAKC,UAAUN,KADvC,6DA+DlB,OALAO,qBAAU,YAvDQ,mBAAAN,EAAAC,OAAA,kEAAAD,EAAA,MACAE,IAAaK,QApBb,WAmBA,OAEhB,GAAU,QADJC,EADU,QAGdX,EAAS,SAET,IACEA,EAASO,KAAKK,MAAMD,IACpB,MAAOE,IAPK,4DAwDhBC,GA9Ce,qBAAAX,EAAAC,OAAA,kEAAAD,EAAA,MACCE,IAAaK,QA7BhB,cA4BE,UAEL,QADJC,EADS,+BAGbf,GAAW,GAHE,0BAMf,IACQmB,EAAOR,KAAKK,MAAMD,GACxBf,EAAWmB,EAAKpB,SAChB,MAAOkB,IATM,4DA+CfG,KACC,IAGD,eAACC,EAAA,EAAD,CAAMC,MAAOC,EAAOC,UAApB,UACE,cAACC,EAAA,EAAD,CAAWH,MAAM,SACjB,eAACD,EAAA,EAAD,CAAMC,MAAOC,EAAOG,OAApB,UACE,cAACC,EAAA,EAAD,CAAkBC,QAxEX,oBAAArB,EAAAC,OAAA,uDACXR,GAAW,GADA,WAAAO,EAAA,MAELE,IAAaC,QAZN,YAYwBC,KAAKC,UAAU,CAAEb,SAAS,MAFpD,6DAwEP,SACE,cAAC8B,EAAA,EAAD,CACEP,MAAO,CACLQ,SAAU,GACVC,WAAY,MACZC,MAAO,QACPA,MAAOjC,EAAU,QAAUH,GAL/B,oBAWF,cAAC+B,EAAA,EAAD,CAAkBC,QAxFT,oBAAArB,EAAAC,OAAA,uDACbR,GAAW,GADE,WAAAO,EAAA,MAEPE,IAAaC,QARN,YAQwBC,KAAKC,UAAU,CAAEb,SAAS,MAFlD,6DAwFT,SACE,cAAC8B,EAAA,EAAD,CACEP,MAAO,CACLQ,SAAU,GACVC,WAAY,MACZC,MAAO,QACPA,MAAQjC,EAAoBH,EAAV,SALtB,yBAYJ,eAACyB,EAAA,EAAD,WACE,cAACY,EAAA,EAAD,CACEC,cAAc,OACdC,gBAvEQ,0BAAA5B,EAAAC,OAAA,mDACD,KAATP,EADU,wDAIRmC,EAJQ,OAIQjC,GAJR,UAIgBkC,KAAKC,MAAQ,CAAErC,OAAMF,aACnDK,EAASgC,GALK,WAAA7B,EAAA,MAMRF,EAAU+B,IANF,OAOdlC,EAAQ,IAPM,6DAwERqC,aAjGa,SAACC,GAAD,OAAatC,EAAQsC,IAkGlCC,MAAOxC,EACPyC,YAAa3C,EAAU,eAAiB,2BACxCuB,MAAOC,EAAOoB,QAEhB,cAACC,EAAA,EAAD,UACGC,OAAOC,KAAK3C,GAAO4C,KAAI,SAACC,GAAD,OACtB7C,EAAM6C,GAAKjD,UAAYA,EACrB,eAACsB,EAAA,EAAD,CAAMC,MAAOC,EAAO0B,KAApB,UACE,cAACpB,EAAA,EAAD,CAAMP,MAAOC,EAAO2B,SAApB,SAA+B/C,EAAM6C,GAAK/C,OAC1C,cAAC0B,EAAA,EAAD,CAAkBC,QAAS,kBAzEtB,SAAOoB,GAAP,eAAAzC,EAAAC,OAAA,mDACG,QAAhB2C,IAASC,GADI,qBAEJC,QAAQ,sCAFJ,8BAIPjB,EAJO,KAISjC,IACN6C,GAChB5C,EAASgC,GANI,WAAA7B,EAAA,MAOPF,EAAU+B,IAPH,+BAUfkB,IAAMC,MAAM,iBAAkB,gBAAiB,CAC7C,CAAEtD,KAAM,UACR,CACEA,KAAM,KACN2B,QAAS,0BAAArB,EAAAC,OAAA,8DACD4B,EADC,KACejC,IACN6C,GAChB5C,EAASgC,GAHF,WAAA7B,EAAA,MAIDF,EAAU+B,IAJT,gEAdE,6DAyE4BoB,CAAWR,IAA5C,SACE,cAACS,EAAA,EAAD,CAAUC,KAAK,QAAQC,KAAM,GAAI3B,MAAM,cAHZgB,GAM7B,gBAQhB,IAAMzB,EAASqC,IAAWC,OAAO,CAC/BrC,UAAW,CACTsC,KAAM,EACNC,gBAAiBnE,EACjBoE,kBAAmB,IAErBtC,OAAQ,CACNuC,eAAgB,gBAChBC,cAAe,MACfC,UAAW,KAEbC,QAAS,CACPtC,SAAU,GACVC,WAAY,MACZC,MAAO,SAETW,MAAO,CACLoB,gBAAiB,QACjBM,eAAgB,GAChBC,gBAAiB,GACjBN,kBAAmB,GACnBO,aAAc,GACdJ,UAAW,GACXrC,SAAU,IAEZmB,KAAM,CACJc,gBAAiBnE,EACjB4E,aAAc,GACdF,gBAAiB,GACjBN,kBAAmB,GACnBO,aAAc,GACdL,cAAe,MACfO,WAAY,SACZR,eAAgB,iBAElBf,SAAU,CACRlB,MAAO,QACPF,SAAU,GACVC,WAAY,U","file":"static/js/app.4cdcce4f.chunk.js","sourcesContent":["export const theme = {\n  bg: \"black\",\n  grey: \"#3A3D40\",\n  todoBg: \"#5C5C60\",\n};\n","import { StatusBar } from \"expo-status-bar\";\nimport { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  TextInput,\n  ScrollView,\n  Alert,\n  Platform,\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { theme } from \"./colors\";\nimport { Fontisto } from \"@expo/vector-icons\";\n\nconst STORAGE_KEY = \"@toDos\";\nconst MODE_KEY = \"@toDoMode\";\n\nexport default function App() {\n  const [working, setWorking] = useState(true);\n  const [text, setText] = useState(\"\");\n  const [toDos, setTodos] = useState({});\n  const travel = async () => {\n    setWorking(false);\n    await AsyncStorage.setItem(MODE_KEY, JSON.stringify({ working: false }));\n  };\n  const work = async () => {\n    setWorking(true);\n    await AsyncStorage.setItem(MODE_KEY, JSON.stringify({ working: true }));\n  };\n  const onChangeText = (payload) => setText(payload);\n  const saveTodos = async (toSave) => {\n    await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(toSave));\n  };\n  const loadToDos = async () => {\n    const s = await AsyncStorage.getItem(STORAGE_KEY);\n    if (s === null) {\n      setTodos({});\n    } else {\n      try {\n        setTodos(JSON.parse(s));\n      } catch (e) {}\n    }\n  };\n  const loadMode = async () => {\n    const s = await AsyncStorage.getItem(MODE_KEY);\n    if (s === null) {\n      setWorking(true);\n      return;\n    }\n    try {\n      const mode = JSON.parse(s);\n      setWorking(mode.working);\n    } catch (e) {}\n  };\n  const addTodo = async () => {\n    if (text === \"\") {\n      return;\n    }\n    const newTodos = { ...toDos, [Date.now()]: { text, working } };\n    setTodos(newTodos);\n    await saveTodos(newTodos);\n    setText(\"\");\n  };\n  const deleteTodo = async (key) => {\n    if (Platform.OS === \"web\") {\n      const ok = confirm(\"Do you want to delete this To do ?\");\n      if (ok) {\n        const newTodos = { ...toDos };\n        delete newTodos[key];\n        setTodos(newTodos);\n        await saveTodos(newTodos);\n      }\n    } else {\n      Alert.alert(\"Delete To Do ?\", \"Are you sure?\", [\n        { text: \"Cancel\" },\n        {\n          text: \"OK\",\n          onPress: async () => {\n            const newTodos = { ...toDos };\n            delete newTodos[key];\n            setTodos(newTodos);\n            await saveTodos(newTodos);\n          },\n        },\n      ]);\n    }\n  };\n\n  useEffect(() => {\n    loadToDos();\n    loadMode();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\"></StatusBar>\n      <View style={styles.header}>\n        <TouchableOpacity onPress={work}>\n          <Text\n            style={{\n              fontSize: 38,\n              fontWeight: \"600\",\n              color: \"white\",\n              color: working ? \"white\" : theme.grey,\n            }}\n          >\n            Work\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={travel}>\n          <Text\n            style={{\n              fontSize: 38,\n              fontWeight: \"600\",\n              color: \"white\",\n              color: !working ? \"white\" : theme.grey,\n            }}\n          >\n            Travel\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View>\n        <TextInput\n          returnKeyType=\"done\"\n          onSubmitEditing={addTodo}\n          onChangeText={onChangeText}\n          value={text}\n          placeholder={working ? \"Add ad To Do\" : \"Where do you want to go?\"}\n          style={styles.input}\n        ></TextInput>\n        <ScrollView>\n          {Object.keys(toDos).map((key) =>\n            toDos[key].working === working ? (\n              <View style={styles.toDo} key={key}>\n                <Text style={styles.todoText}>{toDos[key].text}</Text>\n                <TouchableOpacity onPress={() => deleteTodo(key)}>\n                  <Fontisto name=\"trash\" size={20} color=\"white\"></Fontisto>\n                </TouchableOpacity>\n              </View>\n            ) : null\n          )}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.bg,\n    paddingHorizontal: 20,\n  },\n  header: {\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    marginTop: 100,\n  },\n  btnText: {\n    fontSize: 38,\n    fontWeight: \"600\",\n    color: \"white\",\n  },\n  input: {\n    backgroundColor: \"white\",\n    marginVertical: 20,\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 30,\n    marginTop: 20,\n    fontSize: 18,\n  },\n  toDo: {\n    backgroundColor: theme.todoBg,\n    marginBottom: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    borderRadius: 15,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  todoText: {\n    color: \"white\",\n    fontSize: 16,\n    fontWeight: \"500\",\n  },\n});\n"],"sourceRoot":""}